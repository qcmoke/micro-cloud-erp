server:
  port: 8030

## 数据源
spring:
  application:
    name: mc-pms-server
  cloud:
    nacos:
      discovery:
        server-addr: 39.106.195.202:8848
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://39.106.195.202:3306/mc-pms?useSSL=false&characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true
    username: root
    password: qcmoke)[good](boy
  #redis配置
  redis:
    database: 0
    host: 39.106.195.202
    port: 6379
    password: qcmoke)[good](boy
    jedis:
      pool:
        min-idle: 8
        max-idle: 500
        max-active: 2000
        max-wait: 10000
    timeout: 5000

  #链路追踪
  zipkin:
    base-url: http://39.106.195.202:9411
  sleuth:
    sampler:
      #采样率(0~1 其中1表示采集全部)
      probability: 1

  #json时间转换全局格式
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  ##热部署
  devtools:
    restart:
      enabled: true

##配置mybatis plus
mybatis-plus:
  type-aliases-package: com.qcmoke.pms.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true                      #开启驼峰式命名规则支持
  global-config:
    db-config:
      id-type: auto                                         #MySql主键自增策略
      table-prefix: t_                                      #全局表前缀
      logic-delete-field: deleteStatus  #全局逻辑删除字段值(实体类的属性，而不是表的属性) 3.3.0开始支持(使用mp自带方法删除和查找都会附带逻辑删除功能 ,自己写的sql不会，但@result调动mybatisplus的函数，那么这个子函数也会加上,),统一了全局都是delete_status为逻辑删除字段,但如果实体类上有 @TableLogic 则以实体上的为准，忽略全局
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)


#feign注解支持hystrix服务降级处理
feign:
  hystrix:
    enabled: true

#网关超时时间配置(对于路由使用serviceId时生效)
ribbon:
  #请务器请求超时时间,设置为2秒
  ConnectTimeout: 2000
  #请求处理超时时间(服务器响应超时时间),设置为30秒
  ReadTimeout: 30000
hystrix:
  command:
    default:
      execution:
        isolation:
          ##线程隔离策略配置，官方推荐使用THREAD，即下游依赖的请求在一个单独的线程中隔离，这里为了解决feign转发时需要携带head信息,所以讲策略设置为SEMAPHORE，即下游依赖请求在当前调用线程中执行
          strategy: SEMAPHORE
          #建议配置Hystrix的超时时间要大于ribbon的超时时间，否则会在接口调用还未完成的时候直接进入回调方法
          thread:
            #hystrix超时时间，默认是1秒，设置为64秒。hystrix.default.timeoutInMilliseconds >= (host.connectTimeoutMillis + host.socketTimeoutMillis) + (ribbon.ConnectTimeout +ribbon.ReadTimeout)
            timeoutInMilliseconds: 64000


#springboot admin监控信息
info:
  app:
    name: ${spring.application.name}
    description: "@project.description@"
    version: "@project.version@"
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS

logging:
  level:
    com.qcmoke: debug
#    org.springframework.cloud.openfeign: debug