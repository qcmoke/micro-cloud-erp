server:
  port: 9070

#获取公钥配置
jwt-oauth-service-public-key:
  #认证服务器的ip
  oauth-service-ip: ${mc.oauth-service-ip}
  #认证服务器端口
  oauth-service-port: 9090
  #clientId
  client-id: gateway
  #clientSecret
  client-secret: 123456

spring:
  application:
    name: mc-gateway-server
  #数据库配置
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://${mc.mysql.ip}:3306/mc-ums?useSSL=false&characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true
    username: root
    password: qcmoke)[good](boy

  #redis配置
  redis:
    database: 0
    host: ${mc.redis.ip}
    port: 6379
    password: qcmoke)[good](boy
    jedis:
      pool:
        min-idle: 8
        max-idle: 500
        max-active: 2000
        max-wait: 10000
    timeout: 5000

  cloud:
    #注册中心配置
    nacos:
      discovery:
        server-addr: ${mc.nacos.ip}:8848
        ip: ${mc.nacos.application.ip}

    #网关配置
    gateway:
      routes:
        # 路由配置：1、id：路由的唯一标识，可以任意不重复的字符串；2、url：路由地址，表示指向的目标服务器地址；3、predicates：断言，标识进入url的请求条件；4、filters：过滤器，表示进入路由的过程中执行的过滤
        - id: mc-auth-server
          uri: lb://mc-auth-server
          predicates:
            - Path=/auth/**
          filters:
        - id: mc-ums-server
          uri: lb://mc-ums-server
          predicates:
            - Path=/ums/**
        - id: mc-pms-server
          uri: lb://mc-pms-server
          predicates:
            - Path=/pms/**
        - id: mc-fms-server
          uri: lb://mc-fms-server
          predicates:
            - Path=/fms/**
        - id: mc-oms-server
          uri: lb://mc-oms-server
          predicates:
            - Path=/oms/**
        - id: mc-oms-business-server
          uri: lb://mc-oms-business-server
          predicates:
            - Path=/oms-business/**
        - id: mc-wms-server
          uri: lb://mc-wms-server
          predicates:
            - Path=/wms/**
      default-filters:
        - StripPrefix=1


#网关超时时间配置(对于路由使用serviceId时生效)
ribbon:
  #请务器请求超时时间,设置为2秒
  ConnectTimeout: 2000
  #请求处理超时时间(服务器响应超时时间),设置为30秒
  ReadTimeout: 30000
hystrix:
  command:
    default:
      execution:
        isolation:
          ##线程隔离策略配置，官方推荐使用THREAD，即下游依赖的请求在一个单独的线程中隔离，这里为了解决feign转发时需要携带head信息,所以讲策略设置为SEMAPHORE，即下游依赖请求在当前调用线程中执行
          strategy: SEMAPHORE
          #建议配置Hystrix的超时时间要大于ribbon的超时时间，否则会在接口调用还未完成的时候直接进入回调方法
          thread:
            #hystrix超时时间，默认是1秒，设置为64秒。hystrix.default.timeoutInMilliseconds >= (host.connectTimeoutMillis + host.socketTimeoutMillis) + (ribbon.ConnectTimeout +ribbon.ReadTimeout)
            timeoutInMilliseconds: 64000

logging:
  level:
    com.qcmoke: info